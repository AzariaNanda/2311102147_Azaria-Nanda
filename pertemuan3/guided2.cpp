 #include<iostream>
 using namespace std;

 classNode{
    public:intdata;
    Node*prev;
    Node*next;
 };
 classDoublyLinkedList{
        public:
        Node*head;
        Node*tail;
        DoublyLinkedList(){
            head=nullptr;
            tail=nullptr;
  }
  voidpush(intdata){
        Node*newNode=newNode;
        newNode->data=data;
        newNode->prev=nullptr;
        newNode->next=head;
        if(head!=nullptr){
            head->prev=newNode;
        }
        else{
        tail=newNode;
        }
        head=newNode;
    }
    voidpop(){
        if(head==nullptr){
         return;
    }
    Node*temp=head;
    head=head->next;
    if(head!=nullptr){
      head->prev=nullptr;
    }
    else{
      tail=nullptr;
    }
    deletetemp;
  }
  boolupdate(intoldData,intnewData){
    Node*current=head;while(current!=nullptr){
      if(current->data==oldData){
        current->data=newData;
        returntrue;
      }
      current=current->next;
    }
    returnfalse;
  }
  voiddeleteAll(){
    Node*current=head;
    while(current!=nullptr){
      Node*temp=current;
      current=current->next;
      deletetemp;
    }
    head=nullptr;
    tail=nullptr;
  }
  voiddisplay(){
    Node*current=head;
    while(current!=nullptr){
      cout<<current->data<<"";
      current=current->next;
    }
    cout<<endl;
    }
 };
 intmain(){
  DoublyLinkedListlist;
  while(true){
    cout<<"1.Adddata"<<endl;
    cout<<"2.Deletedata"<<endl;
    cout<<"3.Updatedata"<<endl;
    cout<<"4.Cleardata"<<endl;
    cout<<"5.Displaydata"<<endl;
    cout<<"6.Exit"<<endl;intchoice;
    cout<<"Enteryourchoice:";
    cin>>choice;
    switch(choice){
      case1:{
        int data;
        cout<<"Enterdatatoadd:";
        cin>>data;
        list.push(data);
        break;
      }
      case2:{
        list.pop();
        break;
      }
      case3:{
        intoldData,newData;
        cout<<"Enterolddata:";
        cin>>oldData;
        cout<<"Enternewdata:";
        cin>>newData;
        boolupdated=list.update(oldData,
 newData);
        if(!updated){
          cout<<"Datanotfound"<<endl;
        }
        break;
      }
      case4:{
        list.deleteAll();
        break;
        }
        case 5: {
        list.display();
        break;
        }
        case 6: {
        return 0;
        }
        default: {
        cout << "Invalid choice" << endl;
        break;
        }
    }
 }
 return 0;
 }
